"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var typedoc_plugin_coverage_exports = {};
__export(typedoc_plugin_coverage_exports, {
  load: () => load
});
module.exports = __toCommonJS(typedoc_plugin_coverage_exports);
var import_fs = require("fs");
var import_path = require("path");
var import_typedoc = require("typedoc");
var svg = `
<svg xmlns="http://www.w3.org/2000/svg" width="104" height="20">
  <script/>
  <linearGradient id="a" x2="0" y2="100%">
    <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
    <stop offset="1" stop-opacity=".1"/>
  </linearGradient>
  <rect rx="3" width="104" height="20" fill="#555"/>
  <rect rx="3" x="64" width="40" height="20" fill="@color@"/>
  <path fill="@color@" d="M64 0h4v20h-4z"/>
  <rect rx="3" width="104" height="20" fill="url(#a)"/>
  <g fill="#fff" text-anchor="middle" font-family="DejaVu Sans,Verdana,Geneva,sans-serif" font-size="11">
    <text x="32" y="15" fill="#010101" fill-opacity=".3">document</text>
    <text x="32" y="14">document</text>
    <text x="84" y="15" fill="#010101" fill-opacity=".3">@ratio@</text>
    <text x="84" y="14">@ratio@</text>
  </g>
</svg>
`.trim();
function load(app) {
  app.options.addDeclaration({
    name: "coverageColor",
    help: "Define the define the color of the coverage badge background. Defaults to a dynamic color depending on coverage percentage.",
    defaultValue: ""
  });
  app.renderer.on(import_typedoc.Renderer.EVENT_END, (event) => {
    let actualCount = 0;
    let expectedCount = 0;
    let kinds = app.options.getValue("requiredToBeDocumented").reduce((acc, kindName) => acc | import_typedoc.ReflectionKind[kindName], 0);
    if (kinds & import_typedoc.ReflectionKind.FunctionOrMethod) {
      kinds |= import_typedoc.ReflectionKind.CallSignature;
      kinds = kinds & ~import_typedoc.ReflectionKind.FunctionOrMethod;
    }
    if (kinds & import_typedoc.ReflectionKind.Constructor) {
      kinds |= import_typedoc.ReflectionKind.ConstructorSignature;
      kinds = kinds & ~import_typedoc.ReflectionKind.Constructor;
    }
    if (kinds & import_typedoc.ReflectionKind.Accessor) {
      kinds |= import_typedoc.ReflectionKind.GetSignature | import_typedoc.ReflectionKind.SetSignature;
      kinds = kinds & ~import_typedoc.ReflectionKind.Accessor;
    }
    for (const refl of Object.values(event.project.reflections)) {
      if (refl.kindOf(kinds)) {
        expectedCount += 1;
        if (refl.hasComment()) {
          actualCount += 1;
        }
      }
    }
    const percentDocumented = expectedCount ? Math.floor(100 * actualCount / expectedCount) : 0;
    let color = app.options.getValue("coverageColor");
    if (!color) {
      if (percentDocumented < 50) {
        color = "#db654f";
      } else if (percentDocumented < 90) {
        color = "#dab226";
      } else {
        color = "#4fc921";
      }
    }
    const badge = svg.replace(/@ratio@/g, `${percentDocumented}%`).replace(/@color@/g, color);
    (0, import_fs.writeFileSync)((0, import_path.join)(event.outputDirectory, "coverage.svg"), badge);
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  load
});
